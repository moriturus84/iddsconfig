<?xml version="1.0" encoding="UTF-8"?>

<!-- $Revision: 379 $ $Date: 2019-03-06 15:46:02 +0000 (Wed, 06 Mar 2019) $ -->

<!--
This file defines the QoS for Rolls-Royce real-time backbone nodes which use the CMyBackboneInterface class with TwinOaks CoreDX
-->

<dds>
	<qos_profile name="mds-1">

		<participant_qos name="participantServices">
			<discovery>
				<send_initial_nack>0</send_initial_nack>	<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</discovery>
		</participant_qos>

		<participant_qos name="participantData">
			<discovery>
				<send_initial_nack>0</send_initial_nack>	<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</discovery>
		</participant_qos>

		<datareader_qos name="readerAboutNode" >
			<reliability>
				<kind>BEST_EFFORT_RELIABILITY_QOS</kind>
			</reliability>
		</datareader_qos>

		<datawriter_qos name="writerAboutNode">
			<reliability>
				<kind>BEST_EFFORT_RELIABILITY_QOS</kind>
			</reliability>
			<rtps_writer>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_writer>
		</datawriter_qos>

		<datareader_qos name="readerNodeIDMapping">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_ALL_HISTORY_QOS</kind>
			</history>
			<rtps_reader>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
				<send_initial_nack>0</send_initial_nack>	<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_reader>
		</datareader_qos>

		<datawriter_qos name="writerNodeIDMapping">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_ALL_HISTORY_QOS</kind>
			</history>
			<rtps_writer>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_writer> 
		</datawriter_qos>

		<datareader_qos name="readerNodeBackboneConfiguration">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_ALL_HISTORY_QOS</kind>
			</history>
			<rtps_reader>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
				<send_initial_nack>0</send_initial_nack>	<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_reader>
		</datareader_qos>

		<datawriter_qos name="writerNodeBackboneConfiguration">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_ALL_HISTORY_QOS</kind>
			</history>
			<rtps_writer>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_writer>
		</datawriter_qos>

		<datareader_qos name="readerNodeApplicationConfiguration">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_ALL_HISTORY_QOS</kind>
			</history>
			<rtps_reader>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
				<send_initial_nack>0</send_initial_nack>	<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_reader>
		</datareader_qos>

		<datawriter_qos name="writerNodeApplicationConfiguration">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_ALL_HISTORY_QOS</kind>
			</history>
			<rtps_writer>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_writer>
		</datawriter_qos>

		<datareader_qos name="readerParameterConfiguration">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_ALL_HISTORY_QOS</kind>
			</history>
			<rtps_reader>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
				<send_initial_nack>0</send_initial_nack>	<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_reader>
		</datareader_qos>

		<datawriter_qos name="writerParameterConfiguration">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_ALL_HISTORY_QOS</kind>
			</history>
			<rtps_writer>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_writer>
		</datawriter_qos>

		<datareader_qos name="readerParameterDataSeries">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>		<!-- EIM03069 issue 2 states can be RELIABLE_RELIABILITY or BEST_EFFORT according to use case -->
			</reliability>
			<durability>
				<kind>VOLATILE_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_LAST_HISTORY_QOS</kind>
				<depth>7000</depth>							<!-- samples to keep per instance for the KEEP_LAST_HISTORY policy -->
			</history>
			<latency_budget>
				<duration>
					<sec>0</sec>
					<nanosec>100000000</nanosec>
				</duration>
			</latency_budget>
			<rtps_reader>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
				<send_initial_nack>0</send_initial_nack>	<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
				<accept_batch_msg>FALSE</accept_batch_msg>
			</rtps_reader>
		</datareader_qos>            

		<datawriter_qos name="writerParameterDataSeries">      
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>VOLATILE_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_LAST_HISTORY_QOS</kind>
				<depth>7000</depth>							<!-- samples to keep per instance for the KEEP_LAST_HISTORY policy -->
			</history>
			<latency_budget>
				<duration>
					<sec>0</sec>
					<nanosec>1600000</nanosec>
				</duration>
			</latency_budget>
			<rtps_writer>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
				<enable_batch_msg>FALSE</enable_batch_msg>
				<heartbeat_period>
					<sec>0</sec>
					<nanosec>50000000</nanosec>			
				</heartbeat_period>
				<apply_filters>FALSE</apply_filters>
				<ack_deadline>
					<sec>5</sec>
					<nanosec>0</nanosec>
				</ack_deadline>
			</rtps_writer>  
		</datawriter_qos>

		<datareader_qos name="readerMessage">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>VOLATILE_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_LAST_HISTORY_QOS</kind>
				<depth>100</depth>							<!-- samples to keep per instance for the KEEP_LAST_HISTORY policy -->
			</history>
			<rtps_reader>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
				<send_initial_nack>0</send_initial_nack>	<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_reader>
		</datareader_qos>

		<datawriter_qos name="writerMessage">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>VOLATILE_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_LAST_HISTORY_QOS</kind>
				<depth>100</depth>							<!-- samples to keep per instance for the KEEP_LAST_HISTORY policy -->
			</history>
			<rtps_writer>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_writer>  
		</datawriter_qos>

		<datareader_qos name="readerEvent">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>VOLATILE_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_LAST_HISTORY_QOS</kind>
				<depth>100</depth>							<!-- samples to keep per instance for the KEEP_LAST_HISTORY policy -->
			</history>
			<rtps_reader>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
				<send_initial_nack>0</send_initial_nack>	<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_reader>
		</datareader_qos>

		<datawriter_qos name="writerEvent">
			<reliability>
				<kind>RELIABLE_RELIABILITY_QOS</kind>
			</reliability>
			<durability>
				<kind>VOLATILE_DURABILITY_QOS</kind>
			</durability>
			<history>
				<kind>KEEP_LAST_HISTORY_QOS</kind>
				<depth>100</depth>							<!-- samples to keep per instance for the KEEP_LAST_HISTORY policy -->
			</history>
			<rtps_writer>
				<send_typecode>0</send_typecode>			<!-- CoreDX programmer's guide V3.6 advises to disable this for interoperability -->
			</rtps_writer>  
		</datawriter_qos>

	</qos_profile>
</dds>

